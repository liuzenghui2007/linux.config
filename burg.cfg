#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by /usr/sbin/burg-mkconfig using templates
# from /etc/burg.d and settings from /etc/default/burg
#

### BEGIN /etc/burg.d/00_header ###
set theme_name=ubuntu
set gfxmode=640x480
if [ -s $prefix/burgenv ]; then
  load_env
fi
set default="0"
if [ ${prev_saved_entry} ]; then
  set saved_entry=${prev_saved_entry}
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z ${boot_once} ]; then
    saved_entry=${chosen}
    save_env saved_entry
  fi
}
function select_menu {
  if menu_popup -t template_popup theme_menu ; then
    free_config template_popup template_subitem menu class screen
    load_config ${prefix}/themes/${theme_name}/theme ${prefix}/themes/custom/theme_${theme_name}
    save_env theme_name
    menu_refresh
  fi
}
function toggle_fold {
  if test -z $theme_fold ; then
    set theme_fold=1
  else
    set theme_fold=
  fi
  save_env theme_fold
  menu_refresh
}
function select_resolution {
  if menu_popup -t template_popup resolution_menu ; then
    menu_reload_mode
    save_env gfxmode
  fi
}
if test -f ${prefix}/themes/${theme_name}/theme ; then
  insmod coreui
  menu_region.text
  load_string '+theme_menu { -arabic_and_freedom { command="set theme_name=arabic_and_freedom" }}'
  load_string '+theme_menu { -black_and_white { command="set theme_name=black_and_white" }}'
  load_string '+theme_menu { -burg { command="set theme_name=burg" }}'
  load_string '+theme_menu { -chiva { command="set theme_name=chiva" }}'
  load_string '+theme_menu { -coffee { command="set theme_name=coffee" }}'
  load_string '+theme_menu { -minimum { command="set theme_name=minimum" }}'
  load_string '+theme_menu { -proto { command="set theme_name=proto" }}'
  load_string '+theme_menu { -radiance { command="set theme_name=radiance" }}'
  load_string '+theme_menu { -radiancetext { command="set theme_name=radiancetext" }}'
  load_string '+theme_menu { -refit { command="set theme_name=refit" }}'
  load_string '+theme_menu { -sora { command="set theme_name=sora" }}'
  load_string '+theme_menu { -sora_clean { command="set theme_name=sora_clean" }}'
  load_string '+theme_menu { -sora_extended { command="set theme_name=sora_extended" }}'
  load_string '+theme_menu { -ubuntu { command="set theme_name=ubuntu" }}'
  load_string '+theme_menu { -ubuntu2 { command="set theme_name=ubuntu2" }}'
  load_string '+theme_menu { -winter { command="set theme_name=winter" }}'
  load_config ${prefix}/themes/conf.d/10_hotkey
  load_config ${prefix}/themes/${theme_name}/theme ${prefix}/themes/custom/theme_${theme_name}
  insmod vbe
  insmod png
  insmod jpeg
  set gfxfont="Unifont Regular 16"
  menu_region.gfx
  vmenu resolution_menu
  controller.ext
fi
insmod ext2
set root='(hd0,5)'
search --no-floppy --fs-uuid --set d9594d5b-37d5-40f0-8384-0642dd99eea6
set locale_dir=($root)/boot/burg/locale
set lang=en
insmod gettext
set timeout=5
### END /etc/burg.d/00_header ###

### BEGIN /etc/burg.d/10_linux ###
menuentry 'Ubuntu GNU/Linux, with Linux 4.2.0-42-generic' --class ubuntu --class gnu-linux --class gnu --class os --group group_main {
	insmod ext2
	set root='(hd0,5)'
	search --no-floppy --fs-uuid --set d9594d5b-37d5-40f0-8384-0642dd99eea6
	echo	'Loading Linux 4.2.0-42-generic ...'
	linux	/boot/vmlinuz-4.2.0-42-generic root=UUID=d9594d5b-37d5-40f0-8384-0642dd99eea6 ro  quiet splash
	echo	'Loading initial ramdisk ...'
	initrd	/boot/initrd.img-4.2.0-42-generic
}
#menuentry 'Ubuntu GNU/Linux, with Linux 4.2.0-42-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os --group #group_main {
#	insmod ext2
#	set root='(hd0,5)'
#	search --no-floppy --fs-uuid --set d9594d5b-37d5-40f0-8384-0642dd99eea6
#	echo	'Loading Linux 4.2.0-42-generic ...'
#	linux	/boot/vmlinuz-4.2.0-42-generic root=UUID=d9594d5b-37d5-40f0-8384-0642dd99eea6 ro single 
#	echo	'Loading initial ramdisk ...'
#	initrd	/boot/initrd.img-4.2.0-42-generic
#}
#menuentry 'Ubuntu GNU/Linux, with Linux 4.2.0-27-generic' --class ubuntu --class gnu-linux --class gnu --class os --group group_main {
#	insmod ext2
#	set root='(hd0,5)'
#	search --no-floppy --fs-uuid --set d9594d5b-37d5-40f0-8384-0642dd99eea6
#	echo	'Loading Linux 4.2.0-27-generic ...'
#	linux	/boot/vmlinuz-4.2.0-27-generic root=UUID=d9594d5b-37d5-40f0-8384-0642dd99eea6 ro  quiet splash
#	echo	'Loading initial ramdisk ...'
#	initrd	/boot/initrd.img-4.2.0-27-generic
#}
#menuentry 'Ubuntu GNU/Linux, with Linux 4.2.0-27-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os --group #group_main {
#	insmod ext2
#	set root='(hd0,5)'
#	search --no-floppy --fs-uuid --set d9594d5b-37d5-40f0-8384-0642dd99eea6
#	echo	'Loading Linux 4.2.0-27-generic ...'
#	linux	/boot/vmlinuz-4.2.0-27-generic root=UUID=d9594d5b-37d5-40f0-8384-0642dd99eea6 ro single 
#	echo	'Loading initial ramdisk ...'
#	initrd	/boot/initrd.img-4.2.0-27-generic
#}
### END /etc/burg.d/10_linux ###

### BEGIN /etc/burg.d/30_os-prober ###
menuentry "Windows 10 (loader) (on /dev/sda1)" --class windows --class os {
	insmod ntfs
	set root='(hd0,1)'
	search --no-floppy --fs-uuid --set b2886a53886a15df
	drivemap -s (hd0) ${root}
	chainloader +1
}
### END /etc/burg.d/30_os-prober ###

### BEGIN /etc/burg.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/burg.d/40_custom ###
